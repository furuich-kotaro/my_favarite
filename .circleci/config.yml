# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:3.0.2
        environment:
          RAILS_ENV: test
          DB_HOST: "127.0.0.1"
          DB_USERNAME: "root"
          DB_PASSWORD: "password"
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_DATABASE: "my_favarite_test"
          MYSQL_HOST: "127.0.0.1"
          MYSQL_ROOT_HOST: "%"
          MYSQL_USER: root
          MYSQL_PASSWORD: password

      - image: circleci/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes

    working_directory: ~/favorite_place

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      # Database setup
      # - run: bundle exec rake db:create
      # - run: bundle exec rake db:schema:load

      # run tests!
      # - run:
      #     name: run tests
      #     command: |
      #       mkdir /tmp/test-results
      #       TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
      #         circleci tests split --split-by=timings)"

      #       bundle exec rspec \
      #         --format progress \
      #         --format RspecJunitFormatter \
      #         --out /tmp/test-results/rspec.xml \
      #         --format progress \
      #         $TEST_FILES

      # # collect reports
      # - store_test_results:
      #     path: /tmp/test-results
      # - store_artifacts:
      #     path: /tmp/test-results
      #     destination: test-results

      # - run:
      #     name: run rubocop
      #     command: bundle exec rubocop -a

      # - add_ssh_keys:
      #     fingerprints:
      #       - "c8:29:77:e8:99:20:2b:6e:eb:1e:ab:77:ff:b7:37:44"

      # - deploy:
      #     name: Capistrano deploy unicorn:restart
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" != "master" ]; then
      #         exit 0
      #       fi
      #       bundle exec cap production deploy unicorn:restart
